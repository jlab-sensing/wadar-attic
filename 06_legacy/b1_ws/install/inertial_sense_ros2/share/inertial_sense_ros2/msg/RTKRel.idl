// generated from rosidl_adapter/resource/msg.idl.em
// with input from inertial_sense_ros2/msg/RTKRel.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module inertial_sense_ros2 {
  module msg {
    module RTKRel_Constants {
      const uint8 GPS_STATUS_FIX_3D = 1;
      const uint8 GPS_STATUS_FIX_RTK_SINGLE = 2;
      const uint8 GPS_STATUS_FIX_RTK_FLOAT = 3;
      const uint8 GPS_STATUS_FIX_RTK_FIX = 4;
      const uint8 GPS_STATUS_FLAGS_RTK_FIX_AND_HOLD = 5;
    };
    struct RTKRel {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Age of differential (seconds)")
      float differential_age;

      @verbatim (language="comment", text=
        "Ambiguity resolution ratio factor for validation")
      float ar_ratio;

      @verbatim (language="comment", text=
        "GPS navigation fix type")
      uint8 e_gps_status_fix;

      @verbatim (language="comment", text=
        "Vector to base (m) in ECEF - If Compassing enabled, this is the 3-vector from antenna 2 to antenna 1")
      geometry_msgs::msg::Vector3 vector_base_to_rover;

      @verbatim (language="comment", text=
        "Distance to Base (m)")
      float distance_base_to_rover;

      @verbatim (language="comment", text=
        "Angle from north to vectorToBase in local tangent plane. (rad)")
      float heading_base_to_rover;
    };
  };
};
